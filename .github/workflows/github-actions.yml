name: Test

on:
  push:
    branches: [ main, develop, feature/github-actions]
  pull_request:
    branches: [ main, develop ]

jobs:
  pre-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: docker-compose version
      run: |
        docker-compose -v
  # build-1:
  #   if: false
  #   needs: checkout
  #   runs-on: ubuntu-latest
  #   # steps:
  #   # - uses: actions/checkout@v3

  #   - uses: satackey/action-docker-layer-caching@v0.0.11
  #     continue-on-error: true

  #   - name: checkout branch
  #     run: /usr/bin/git checkout --progress --force -B test
    
  #   - name: git branch
  #     run: /usr/bin/git branch

  #   - name: .env copy for docker
  #     run: |
  #       cp -a .env.docker .env 

  #   - name: docker-compose version
  #     run: |
  #       docker-compose -v

  #   - name: docker-compose up
  #     run: |
  #       docker-compose build chat-demo-db-testing |
  #       docker-compose build chat-demo-db |
  #       docker-compose build chat-demo-backend |
  #       docker-compose up -d chat-demo-db-testing chat-demo-db  chat-demo-backend
    
  #   - name: Wait for starting
  #     run: |
  #       set -x
  #       until [ "$(docker inspect --format='{{.State.Health.Status}}' $(docker compose ps -q chat-demo-db-testing))" = 'healthy' ]; do
  #         sleep 1s
  #       done

  #   - name: php version
  #     run: |
  #       docker exec chat-demo-backend  /bin/sh -c "php -v"

  #   - name: composer version
  #     run: |
  #       docker exec chat-demo-backend  /bin/sh -c "composer -V"

  #   - name: composer install
  #     run: |
  #       docker exec chat-demo-backend  /bin/sh -c "composer install"
    
  #   - name: phpunit
  #     run: |
  #       docker exec chat-demo-backend  /bin/sh -c  "php artisan test"

  build-2:
    if: true
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true
      
    - name: checkout branch
      run: /usr/bin/git checkout --progress --force -B test
    
    - name: git branch
      run: /usr/bin/git branch
    - name: .env copy for docker
      run: |
        cp -a .env.docker .env 

    - name: docker-compose version
      run: |
        docker-compose -v

